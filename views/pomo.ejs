<!DOCTYPE html>
<head>
    <title>Focus Mode</title>
    <link href="https://fonts.cdnfonts.com/css/public-pixel" rel="stylesheet">

    <link rel="stylesheet" type="text/css" href="/main.css" />
</head>
<body>
    <header>
        <nav class="menu">
          <ul>
            <li><a href="/">Home</a></li>
            <li><a href="addtasks">Add Tasks</a></li>
            <li><a href="viewtasks">View Tasks</a></li>
            <li><a href="focus">Focus</a></li>
            <li><a href="logout">Logout</a></li>
          </ul>
        </nav>
      </header>
    <div class="pomo-container">
        <h1>Pomodoro Timer</h1>
        <div id="timerDisplay">25:00</div>
        <button id="startStopBtn">Start</button>
        <button id="resetBtn">Reset</button>
        <p>Sessions Completed: <span id="sessionCount">0</span></p>
    </div>
    <script>
        let isRunning = false;
        let sessionCount = 0;
        let sessionTime = 25 * 60; // 25 minutes
        let breakTime = 5 * 60; // 5 minutes
        let longBreakTime = 15 * 60; // 15 minutes
        let currentTime = sessionTime;
        let timer;
    
        const display = document.getElementById('timerDisplay');
        const startStopBtn = document.getElementById('startStopBtn');
        const resetBtn = document.getElementById('resetBtn');
        const sessionCountDisplay = document.getElementById('sessionCount');
    
        function updateDisplay(time) {
            let minutes = Math.floor(time / 60);
            let seconds = time % 60;
            display.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }
    
        function toggleTimer() {
            if (isRunning) {
                clearInterval(timer);
                startStopBtn.textContent = 'Start';
            } else {
                timer = setInterval(function() {
                    currentTime--;
                    updateDisplay(currentTime);
    
                    if (currentTime <= 0) {
                        clearInterval(timer);
                        sessionCount++;
                        sessionCountDisplay.textContent = sessionCount;
                        
                        if (sessionCount % 4 === 0) {
                            currentTime = longBreakTime;
                        } else {
                            currentTime = sessionCount % 2 === 0 ? breakTime : sessionTime;
                        }
    
                        updateDisplay(currentTime);
                    }
                }, 1000);
                startStopBtn.textContent = 'Pause';
            }
            isRunning = !isRunning;
        }
    
        function resetTimer() {
            clearInterval(timer);
            isRunning = false;
            sessionCount = 0;
            currentTime = sessionTime;
            updateDisplay(currentTime);
            sessionCountDisplay.textContent = sessionCount;
            startStopBtn.textContent = 'Start';
        }
    
        startStopBtn.addEventListener('click', toggleTimer);
        resetBtn.addEventListener('click', resetTimer);
    
        updateDisplay(currentTime);
    </script>
        

    <script>
        function fetchWeather() {
            let city = 'london';
            let apiKey = '2315392e1494807887d2743404f0616f';
            let url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`;
    
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    displayWeather(data);
                })
                .catch(err => {
                    console.error('Error fetching weather:', err);
                });
        }
    
        function displayWeather(data) {
            const weatherContainer = document.createElement('div');
            weatherContainer.innerHTML = `
                <h2>Weather in ${data.name}</h2>
                <p>Temperature: ${data.main.temp} Â°C</p>
                <p>Weather: ${data.weather[0].main}</p>
            `;
            document.body.appendChild(weatherContainer);
        }
    
        fetchWeather();
    </script>

    <div class="weather-container"></div>

</body>
</html>